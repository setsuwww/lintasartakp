generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum ShiftType {
  OFF
  MORNING
  AFTERNOON
  NIGHT
}

enum Role {
  ADMIN
  COORDINATOR
  EMPLOYEE
  USER
}

enum TicketStatus {
  PENDING
  ACCEPTED
  REJECTED
}

model Office {
  id        Int       @id @default(autoincrement())
  name      String
  location  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  users     User[]
  shifts    Shift[]
  schedules Schedule[]
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  role     Role   @default(USER)

  tickets     Ticket[]
  schedules   Schedule[]
  attendances Attendance[]

  shift    Shift?  @relation(fields: [shiftId], references: [id])
  shiftId  Int?

  office   Office? @relation(fields: [officeId], references: [id])
  officeId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ticket {
  id          Int          @id @default(autoincrement())
  title       String
  description String?
  status      TicketStatus @default(PENDING)

  user   User @relation(fields: [userId], references: [id])
  userId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Schedule {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  date        DateTime

  user    User?   @relation(fields: [userId], references: [id])
  userId  Int?

  shift   Shift?  @relation(fields: [shiftId], references: [id])
  shiftId Int?

  office   Office? @relation(fields: [officeId], references: [id])
  officeId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Shift { 
  id         Int       @id @default(autoincrement()) 
  type       ShiftType 
  startTime  DateTime  // ubah dari String ke DateTime
  endTime    DateTime  // ubah dari String ke DateTime
 
  users       User[] 
  schedules   Schedule[] 
  attendances Attendance[] 
 
  office   Office? @relation(fields: [officeId], references: [id]) 
  officeId Int? 
}

model Attendance {
  id     Int              @id @default(autoincrement())
  date   DateTime
  status AttendanceStatus @default(ABSENT)
  reason String?

  user   User @relation(fields: [userId], references: [id])
  userId Int

  shift   Shift @relation(fields: [shiftId], references: [id])
  shiftId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum AttendanceStatus {
  PRESENT
  ABSENT
  LATE
  PERMISSION
}
