generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum ShiftType {
  OFF
  MORNING
  AFTERNOON
  EVENING
}

enum Role {
  ADMIN
  COORDINATOR
  EMPLOYEE
  USER
}

enum permissionStatus {
  PENDING
  ACCEPTED
  REJECTED
}

enum AttendanceStatus {
  PRESENT
  ABSENT
  LATE
  PERMISSION
  ALPHA
}

model Office {
  id        Int       @id @default(autoincrement())
  name      String
  location  String?

  users     User[]
  shifts    Shift[]
  schedules Schedule[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  role     Role   @default(USER)

  schedules Schedule[]
  attendances Attendance[]
  permissionRequests PermissionRequest[]

  shift       Shift?  @relation(fields: [shiftId], references: [id])
  shiftId     Int?

  office      Office? @relation(fields: [officeId], references: [id])
  officeId    Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Schedule {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  date        DateTime

  user    User?   @relation(fields: [userId], references: [id])
  userId  Int?

  shift   Shift?  @relation(fields: [shiftId], references: [id])
  shiftId Int?

  office   Office? @relation(fields: [officeId], references: [id])
  officeId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Shift { 
  id         Int       @id @default(autoincrement()) 
  type       ShiftType 
  shiftName  String?
  startTime  Int 
  endTime    Int 
 
  users       User[] 
  schedules   Schedule[] 
  attendances Attendance[] 
  permissionRequests PermissionRequest[]
 
  office   Office? @relation(fields: [officeId], references: [id]) 
  officeId Int? 
}

model Attendance {
  id     Int              @id @default(autoincrement())
  date   DateTime
  status AttendanceStatus @default(ABSENT)
  reason String?

  checkInTime   DateTime?
  checkOutTime  DateTime?

  user   User @relation(fields: [userId], references: [id])
  userId Int

  shift   Shift @relation(fields: [shiftId], references: [id])
  shiftId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, shiftId, date])
}

model PermissionRequest {
  id        Int              @id @default(autoincrement())
  reason    String
  status    permissionStatus @default(PENDING)

  user   User @relation(fields: [userId], references: [id])
  userId Int

  shift   Shift? @relation(fields: [shiftId], references: [id])
  shiftId Int?

  date DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
